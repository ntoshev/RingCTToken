from ring_signatures import *
from ct import *
from stealth import *
from ringct import *

def PrintTxExportAsDeposit(transaction_pool, stealth_addr=None):
    print("============================================")
    print("Deposit Multiple Data")
    print("============================================")
    #pub_keys
    print("Pub Keys:")
    #print("[", end = "")
    for i in range (0, len(transaction_pool)):
        print(bytes32_to_str(transaction_pool[i][0]), end = "")
        if (i < (len(transaction_pool)-1)):
            print(",")
        else:
            print("\n")

    #dhe_points
    print("DHE Points:")
    #print("[", end = "")
    for i in range (0, len(transaction_pool)):
        print(bytes32_to_str(transaction_pool[i][1]), end = "")
        if (i < (len(transaction_pool)-1)):
            print(",")
        else:
            print("\n")

    #values
    v_total = 0
    if (stealth_addr != None):
        print("Values:")
        #print("[", end = "")
        for i in range (0, len(transaction_pool)):
            stealth_tx = StealthTransaction(ExpandPoint(transaction_pool[i][0]), #pub_key compressed
                                            ExpandPoint(transaction_pool[i][1]), #dhe_point compressed
                                            ExpandPoint(transaction_pool[i][2]), #c_value compressed
                                            PCAESMessage(int_to_bytes64(transaction_pool[i][3]),  #pc_encrypted_data.message
                                                         int_to_bytes16(transaction_pool[i][4]))) #pc_encrypted_data.iv

            data = stealth_tx.DecryptData(stealth_addr[1])
            print(str(data[0]), end = "")
            v_total = v_total + int(data[0])
            
            if (i < (len(transaction_pool)-1)):
                print(",")
            else:
                print("\n")

        print("Total Value = " + str(v_total) + " wei or " + str(v_total / 10**18) + " ETH")
        print()
    else:
        print("C Values:")
        #print("[", end = "")
        for i in range (0, len(transaction_pool)):
            print(bytes32_to_str(transaction_pool[i][2]), end = "")
            
            if (i < (len(transaction_pool)-1)):
                print(",")
            else:
                print("\n")

    print()


StealthAddressExport = [0x19e857368117ca5aee6734b101b1773052ae24d54f654e41e1e586dbfd77800b, 0x1c097a5cd668c0bf408d7e05ad11887dd91a2553b821aec9c5809e19097c785f]

UTXOPoolExport = [[75112348469451315532889174760048103546655423371486346980993162171361425602290, 5178033740504877134621149438001999607974045910247019855382462736289678376894, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 10264641524029088746866912500564764038091696836627398127108308224899819000214227610840595096794216428443594883787671472270516096414429129721053327486190577, 130800489226220164623220067356729836985], [1772513516751583190555910214477973041759483301810950914226497781074090954418, 69939273333403515963872046859694090167224906675572571904346359691524127256195, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 10802291933109500428210987384937987692598325731907943153847798602548048369999518571817365440162725057861272483150204190720431395251669390851447842540825389, 225246563676202970267634789337321793112], [703658030221153728662541608937672929927295273414900794268741904290665541440, 5349887787599624243101454808951655537467115814832057400953642163334524608945, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 13383879531368753325437070864053535799603436040012876556525605984405661572349856859410591790086591007274132381458199554350260832028804733062237731952598935, 308742822891929043356247648414816814636], [78100506277734247563552769625654942189414491644756270257036126713952818658308, 62552353313130511464743411240390096759551469116294535430648499585250005007703, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 2979329787481045616713956585456788673280262140307272801191786589925282436860785883491477411405283072905519199537719405497491949888412275913495425351383299, 277213515906483401851617078177164221644], [79764885411196882837360882559447232804957653601979684827443476192558840487491, 75643003197670974751083485541505736424619429043607120260605993250626321111994, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 562267987276915819751464174325363692703862873022881975451807731596957832076093521097321979046640394767045010672769276007576794847319991779757277552750461, 261307889844181705376639674937684810354], [60508202748946620397871817108517606263971532640065966286676474743157211267392, 62234681046349417828996531302590885648091577656025666229623056463286970529597, 18750702247587075939783801383560860015433314634918927270947660563865807356324, 4765921002861671138744724813456631447839488334358908373750664102115532909200762075791892164340003003056661953935135823131335952712692315842426313551849871, 61498653529398406776325888497381453055], [16170343921996030623180772277756609335422866781880123296095031516841546311892, 11548395898904446758475036193638709127159126677915355801612849795061975741537, 9779063798575934699286307123120062846814354546087705020887986697848252808250, 3757212473804918307960783212814651554069245663200706886928387248960503677368883975874166773058844200545520505821847646946927334245547407714265120475492474, 67741180299245589898337733242629105632], [61666169050777578280956088551769091696331555154628896055778169040123618921117, 13104672521534218652328066827020128847284051821878071653623823122541446833162, 17525455952414983231714273119973223075692419806270469351857142915570436338996, 4737109386177189757529788080169066144879384072281364692384443715215345795115288097598320465628746900171283852267969655602622530929025582882519651346564442, 120740206887513966542997088881281462314]]

MixinPoolExport = [[73150661165491119988883500626469590439989140556025576083612915950889808333456, 65167923530263088005567211278931532499274700507878327226915289327374221988767, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 2184876711846139106171589058301595764498134357270260202070098353985518939525216487237960216575985976939971392463813319270819404614962605689819803597791717, 289148044102148608548268547873044349632], [59561006247310324136650244334545942570736624038226309911381103347482123707463, 7326243170145765279474804335498791868424804340332596812765677756770321308537, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 4172333214753467250698843348150576650958054270546978353864781730610386863647460827676279797787388649372526990686875598881870185604519429007257836905129715, 179729682949789999443449749652299047145], [18163997797753098729435682480229294719848735211043537345907474223794217744725, 74201636263454781315656299533908326958989233100176579264596414274383907107961, 12997478150392438687703643147997946481458681973845852330231356424810295336383, 3818826530879080728196276831721425770470669752271801067372723439535455279162151895722832752721146547192604583382835195748535791975385862279143273860916397, 294759625519508565619307098192484323806]]
